{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["GENDERS","BOY","GIRL","MIDDLE","App","useState","name","setName","gender","setGender","fullName","setFullName","onRefresh","index","Math","floor","random","names","length","getRandomName","useEffect","className","onChange","e","target","value","Object","values","map","g","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAKMA,EAAU,CACdC,IAAK,MACLC,KAAM,QAGFC,GAAM,mBACTH,EAAQC,IAAM,WADL,cAETD,EAAQE,KAAO,OAFN,GAoDGE,MAzCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEeF,mBAASL,EAAQC,KAFhC,mBAENO,EAFM,KAEEC,EAFF,OAGmBJ,mBAAS,GAAD,OAAIC,EAAJ,sBAH3B,mBAGNI,EAHM,KAGIC,EAHJ,KAKPC,EAAY,WAChBL,EAZkB,SAACC,GACrB,IAAMK,EAAQC,KAAKC,MAAMD,KAAKE,SAAWC,EAAMT,GAAQU,QAEvD,OAAOD,EAAMT,GAAQK,GASXM,CAAcX,KAexB,OARAY,qBAAU,WACRT,EAAY,GAAD,OAAIL,EAAJ,YAAYH,EAAOK,GAAnB,gBACV,CAACF,IAEJc,qBAAU,WACRR,MACC,CAACJ,IAGF,sBAAKa,UAAU,MAAf,UACE,8BAAMX,IACN,sBAAKW,UAAU,OAAf,UACE,wBAAQC,SAhBS,SAACC,GACtBd,EAAUc,EAAEC,OAAOC,QAemBA,MAAOjB,EAAzC,SACGkB,OAAOC,OAAO3B,GAAS4B,KAAI,SAACC,GAAD,OAC1B,wBAAgBJ,MAAOI,EAAvB,SACGA,GADUA,QAKjB,wBAAQC,QAASlB,EAAjB,SACE,cAAC,IAAD,SAGJ,sBAAKS,UAAU,YAAf,wBAAoCf,SC7C3ByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.127364f1.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport Refresh from '@material-ui/icons/Refresh';\nimport names from './names.json';\nimport './App.css';\n\nconst GENDERS = {\n  BOY: 'boy',\n  GIRL: 'girl',\n};\n\nconst MIDDLE = {\n  [GENDERS.BOY]: 'Matthew',\n  [GENDERS.GIRL]: 'Ann',\n};\n\nconst getRandomName = (gender) => {\n  const index = Math.floor(Math.random() * names[gender].length);\n\n  return names[gender][index];\n};\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [gender, setGender] = useState(GENDERS.BOY);\n  const [fullName, setFullName] = useState(`${name} Matthew Donnelly`);\n\n  const onRefresh = () => {\n    setName(getRandomName(gender));\n  };\n\n  const onGenderChange = (e) => {\n    setGender(e.target.value);\n  };\n\n  useEffect(() => {\n    setFullName(`${name} ${MIDDLE[gender]} Donnelly`);\n  }, [name]);\n\n  useEffect(() => {\n    onRefresh();\n  }, [gender]);\n\n  return (\n    <div className=\"App\">\n      <div>{fullName}</div>\n      <div className=\"menu\">\n        <select onChange={onGenderChange} value={gender}>\n          {Object.values(GENDERS).map((g) => (\n            <option key={g} value={g}>\n              {g}\n            </option>\n          ))}\n        </select>\n        <button onClick={onRefresh}>\n          <Refresh />\n        </button>\n      </div>\n      <div className=\"collected\">Ois√≠n & {name}</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}